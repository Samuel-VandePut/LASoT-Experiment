{"mutators":["void","null","empty","true","false","0","1","(short)0","(short)1","(byte)0","(byte)1","0L","1L","0.0","1.0","0.0f","1.0f","'\\40'","'A'","\"\"","\"A\""],"mutations":[{"detected":false,"status":"NO_COVERAGE","mutator":"void","line":161,"block":0,"file":"GameController.java","index":1,"method":{"name":"afterMove","description":"()V","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":0,"ordered":[],"killing":[],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"false","line":73,"block":0,"file":"GameController.java","index":1,"method":{"name":"fillFirstEmptyTile","description":"()Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":2,"ordered":["be.unamur.game2048.Test2048.testFillFirstEmptyTileFalseOnFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameFirstTileNotNull(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameNumberOfTileAddedEqualsNbStartTileFilledGameParam(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testStartGameFirstTileNotNull(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"true","line":73,"block":0,"file":"GameController.java","index":1,"method":{"name":"fillFirstEmptyTile","description":"()Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testFillFirstEmptyTileFalseOnFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameFirstTileNotNull(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameNumberOfTileAddedEqualsNbStartTileFilledGameParam(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testFillFirstEmptyTileFalseOnFullGrid(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"false","line":110,"block":0,"file":"GameController.java","index":1,"method":{"name":"move","description":"(IIIIZ)Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"true","line":110,"block":0,"file":"GameController.java","index":1,"method":{"name":"move","description":"(IIIIZ)Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":3,"ordered":["be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"false","line":91,"block":0,"file":"GameController.java","index":1,"method":{"name":"moveDown","description":"(Z)Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":false,"status":"SURVIVED","mutator":"true","line":91,"block":0,"file":"GameController.java","index":1,"method":{"name":"moveDown","description":"(Z)Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)"],"killing":[],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"false","line":95,"block":0,"file":"GameController.java","index":1,"method":{"name":"moveLeft","description":"(Z)Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":false,"status":"SURVIVED","mutator":"true","line":95,"block":0,"file":"GameController.java","index":1,"method":{"name":"moveLeft","description":"(Z)Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)"],"killing":[],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"false","line":99,"block":0,"file":"GameController.java","index":1,"method":{"name":"moveRight","description":"(Z)Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":false,"status":"SURVIVED","mutator":"true","line":99,"block":0,"file":"GameController.java","index":1,"method":{"name":"moveRight","description":"(Z)Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)"],"killing":[],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"false","line":87,"block":0,"file":"GameController.java","index":1,"method":{"name":"moveUp","description":"(Z)Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":2,"ordered":["be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":false,"status":"SURVIVED","mutator":"true","line":87,"block":0,"file":"GameController.java","index":1,"method":{"name":"moveUp","description":"(Z)Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":3,"ordered":["be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)"],"killing":[],"succeeding":[]}},{"detected":false,"status":"NO_COVERAGE","mutator":"false","line":175,"block":0,"file":"GameController.java","index":1,"method":{"name":"movesAvailable","description":"()Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":0,"ordered":[],"killing":[],"succeeding":[]}},{"detected":false,"status":"NO_COVERAGE","mutator":"true","line":175,"block":0,"file":"GameController.java","index":1,"method":{"name":"movesAvailable","description":"()Z","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":0,"ordered":[],"killing":[],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"void","line":63,"block":0,"file":"GameController.java","index":1,"method":{"name":"resetData","description":"()V","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":4,"ordered":["be.unamur.game2048.Test2048.testFillFirstEmptyTileFalseOnFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameFirstTileNotNull(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameNumberOfTileAddedEqualsNbStartTileFilledGameParam(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"void","line":43,"block":0,"file":"GameController.java","index":1,"method":{"name":"startGame","description":"()V","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testStartGameFirstTileNotNull(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameNumberOfTileAddedEqualsNbStartTileFilledGameParam(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testStartGameFirstTileNotNull(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"void","line":56,"block":0,"file":"GameController.java","index":1,"method":{"name":"startGame","description":"([[Lbe/unamur/game2048/models/Tile;)V","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testFillFirstEmptyTileFalseOnFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testFillFirstEmptyTileFalseOnFullGrid(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":false,"status":"NO_COVERAGE","mutator":"void","line":151,"block":0,"file":"GameController.java","index":1,"method":{"name":"updateScore","description":"(I)V","class":"GameController","package":"be.unamur.game2048.controllers"},"tests":{"run":0,"ordered":[],"killing":[],"succeeding":[]}},{"detected":false,"status":"NO_COVERAGE","mutator":"void","line":46,"block":0,"file":"Grid.java","index":1,"method":{"name":"clearMerged","description":"()V","class":"Grid","package":"be.unamur.game2048.models"},"tests":{"run":0,"ordered":[],"killing":[],"succeeding":[]}},{"detected":false,"status":"SURVIVED","mutator":"empty","line":29,"block":0,"file":"Grid.java","index":1,"method":{"name":"getCol","description":"(I)[Lbe/unamur/game2048/models/Tile;","class":"Grid","package":"be.unamur.game2048.models"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testGetCol(be.unamur.game2048.Test2048)"],"killing":[],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"null","line":29,"block":0,"file":"Grid.java","index":1,"method":{"name":"getCol","description":"(I)[Lbe/unamur/game2048/models/Tile;","class":"Grid","package":"be.unamur.game2048.models"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testGetCol(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testGetCol(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":false,"status":"NO_COVERAGE","mutator":"0","line":42,"block":0,"file":"Grid.java","index":1,"method":{"name":"getLength","description":"()I","class":"Grid","package":"be.unamur.game2048.models"},"tests":{"run":0,"ordered":[],"killing":[],"succeeding":[]}},{"detected":false,"status":"NO_COVERAGE","mutator":"1","line":42,"block":0,"file":"Grid.java","index":1,"method":{"name":"getLength","description":"()I","class":"Grid","package":"be.unamur.game2048.models"},"tests":{"run":0,"ordered":[],"killing":[],"succeeding":[]}},{"detected":false,"status":"NO_COVERAGE","mutator":"empty","line":25,"block":0,"file":"Grid.java","index":1,"method":{"name":"getRow","description":"(I)[Lbe/unamur/game2048/models/Tile;","class":"Grid","package":"be.unamur.game2048.models"},"tests":{"run":0,"ordered":[],"killing":[],"succeeding":[]}},{"detected":false,"status":"NO_COVERAGE","mutator":"null","line":25,"block":0,"file":"Grid.java","index":1,"method":{"name":"getRow","description":"(I)[Lbe/unamur/game2048/models/Tile;","class":"Grid","package":"be.unamur.game2048.models"},"tests":{"run":0,"ordered":[],"killing":[],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"null","line":19,"block":0,"file":"Grid.java","index":1,"method":{"name":"getTile","description":"(I)Lbe/unamur/game2048/models/Tile;","class":"Grid","package":"be.unamur.game2048.models"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testFillFirstEmptyTileFalseOnFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testSetTile(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testGetTileWithPosition(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameFirstTileNotNull(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameNumberOfTileAddedEqualsNbStartTileFilledGameParam(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testFillFirstEmptyTileFalseOnFullGrid(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"null","line":15,"block":0,"file":"Grid.java","index":1,"method":{"name":"getTile","description":"(II)Lbe/unamur/game2048/models/Tile;","class":"Grid","package":"be.unamur.game2048.models"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testFillFirstEmptyTileFalseOnFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testGetTileWithPosition(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testGetTileWithRowAndCol(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testSetTile(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameFirstTileNotNull(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameNumberOfTileAddedEqualsNbStartTileFilledGameParam(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testFillFirstEmptyTileFalseOnFullGrid(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"void","line":36,"block":0,"file":"Grid.java","index":1,"method":{"name":"setTile","description":"(ILbe/unamur/game2048/models/Tile;)V","class":"Grid","package":"be.unamur.game2048.models"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testSetTile(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameFirstTileNotNull(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameNumberOfTileAddedEqualsNbStartTileFilledGameParam(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testSetTile(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"false","line":42,"block":0,"file":"Tile.java","index":1,"method":{"name":"canMergeWith","description":"(Lbe/unamur/game2048/models/Tile;)Z","class":"Tile","package":"be.unamur.game2048.models"},"tests":{"run":3,"ordered":["be.unamur.game2048.Test2048.testMergeWithResultOnImpossibleMerging(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testCanMergeWithTwoDifferentsTileValue(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMergeWith(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testCanMergeTileWithTwoSameTileValue(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testMergeWith(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"true","line":42,"block":0,"file":"Tile.java","index":1,"method":{"name":"canMergeWith","description":"(Lbe/unamur/game2048/models/Tile;)Z","class":"Tile","package":"be.unamur.game2048.models"},"tests":{"run":2,"ordered":["be.unamur.game2048.Test2048.testMergeWithResultOnImpossibleMerging(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testCanMergeWithTwoDifferentsTileValue(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMergeWith(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testCanMergeTileWithTwoSameTileValue(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testCanMergeWithTwoDifferentsTileValue(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"false","line":70,"block":0,"file":"Tile.java","index":1,"method":{"name":"equals","description":"(Ljava/lang/Object;)Z","class":"Tile","package":"be.unamur.game2048.models"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testTileEquals(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testTileNotEquals(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testSetTile(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testGetTileWithRowAndCol(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testTileEquals(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"true","line":70,"block":0,"file":"Tile.java","index":1,"method":{"name":"equals","description":"(Ljava/lang/Object;)Z","class":"Tile","package":"be.unamur.game2048.models"},"tests":{"run":2,"ordered":["be.unamur.game2048.Test2048.testTileEquals(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testTileNotEquals(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testSetTile(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testGetTileWithRowAndCol(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testTileNotEquals(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"0","line":20,"block":0,"file":"Tile.java","index":1,"method":{"name":"getNearestPower2","description":"(I)I","class":"Tile","package":"be.unamur.game2048.models"},"tests":{"run":4,"ordered":["be.unamur.game2048.Test2048.testTileEquals(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testFillFirstEmptyTileFalseOnFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testSetTile(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMergeWithResultOnImpossibleMerging(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testCanMergeWithTwoDifferentsTileValue(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testGetTileWithPosition(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testGetCol(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testTileNotEquals(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testGetTileWithRowAndCol(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameFirstTileNotNull(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMergeWith(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameNumberOfTileAddedEqualsNbStartTileFilledGameParam(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testCanMergeTileWithTwoSameTileValue(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testMergeWithResultOnImpossibleMerging(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"1","line":20,"block":0,"file":"Tile.java","index":1,"method":{"name":"getNearestPower2","description":"(I)I","class":"Tile","package":"be.unamur.game2048.models"},"tests":{"run":5,"ordered":["be.unamur.game2048.Test2048.testTileEquals(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testFillFirstEmptyTileFalseOnFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testSetTile(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMergeWithResultOnImpossibleMerging(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testCanMergeWithTwoDifferentsTileValue(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testGetTileWithPosition(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testGetCol(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testTileNotEquals(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testGetTileWithRowAndCol(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameFirstTileNotNull(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMergeWith(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testStartGameNumberOfTileAddedEqualsNbStartTileFilledGameParam(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnFullGridWithMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testNoMoveAvailableOnFullGridWithNoMergingPossibility(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMoveAvailableOnNonFullGrid(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testCanMergeTileWithTwoSameTileValue(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testCanMergeWithTwoDifferentsTileValue(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"0","line":54,"block":0,"file":"Tile.java","index":1,"method":{"name":"mergeWith","description":"(Lbe/unamur/game2048/models/Tile;)I","class":"Tile","package":"be.unamur.game2048.models"},"tests":{"run":1,"ordered":["be.unamur.game2048.Test2048.testMergeWithResultOnImpossibleMerging(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMergeWith(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testMergeWithResultOnImpossibleMerging(be.unamur.game2048.Test2048)"],"succeeding":[]}},{"detected":true,"status":"KILLED","mutator":"1","line":54,"block":0,"file":"Tile.java","index":1,"method":{"name":"mergeWith","description":"(Lbe/unamur/game2048/models/Tile;)I","class":"Tile","package":"be.unamur.game2048.models"},"tests":{"run":2,"ordered":["be.unamur.game2048.Test2048.testMergeWithResultOnImpossibleMerging(be.unamur.game2048.Test2048)","be.unamur.game2048.Test2048.testMergeWith(be.unamur.game2048.Test2048)"],"killing":["be.unamur.game2048.Test2048.testMergeWith(be.unamur.game2048.Test2048)"],"succeeding":[]}}],"time":2326}